<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Martini Software</title>
 <link href="http://martinisoftware.com/atom.xml" rel="self"/>
 <link href="http://martinisoftware.com/"/>
 <updated>2013-12-28T19:59:50-06:00</updated>
 <id>http://martinisoftware.com/</id>
 <author>
   <name>Aaron Kalin</name>
   <email>akalin@martinisoftware.com</email>
 </author>

 
 <entry>
   <title>Don't Be Nervous</title>
   <link href="http://martinisoftware.com//2013/05/03/don-t-be-nervous.html"/>
   <updated>2013-05-03T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2013/05/03/don-t-be-nervous</id>
   <content type="html">&lt;p&gt;Hi there. My name is Aaron Kalin and I&amp;#39;m here to tell you &amp;quot;Don&amp;#39;t be nervous.&amp;quot; Actually, I&amp;#39;m really here to talk about how to break out of your shell. People in technology, especially developers, tend to be introverted. Nothing wrong with that, but it can&amp;#39;t hurt to be a little social and put yourself out there. I&amp;#39;m going to share my short story in the hopes it might inspire others out there in a similar situation.&lt;/p&gt;

&lt;h2&gt;Rough beginnings&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s jump back to 2006. At the time, I was a fed up PHP developer working freelance. Ready to quit programming from lousy contracts and employers taking advantage of me. A friend messaged me the year prior about this new web framework called &lt;a href=&quot;http://www.rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;. It quickly gained popularity from the 10 minute blog video. A conference was recently announced to be held in Chicago. I assumed RailsConf would be my ticket to a new career in Ruby.&lt;/p&gt;

&lt;h2&gt;Meeting people&lt;/h2&gt;

&lt;p&gt;I arrived early to the first day of the conference during workshops. Since I barely had enough for the conference ticket, I went next door to the open space and sat down at a large round table. Soon, others started to stream in and next to me sat Chad Fowler. Being too nervous to introduce myself, I kept quiet and kept coding.&lt;/p&gt;

&lt;p&gt;At some point in the day, someone piped up and asked around the table about what we were working on in Rails. Eventually I chimed in with &amp;quot;I&amp;#39;m porting a PHP app over to Rails, but I&amp;#39;m wanting to use this attachment fu plugin and there isn&amp;#39;t much documentation, need to ask this technoweenie guy about how it works.&amp;quot; That is when Chad Fowler leaned over and said &amp;quot;You should ask him, he&amp;#39;s sitting right there&amp;quot; as he pointed out Rick Olson, also known as technoweenie sitting across the table. That was an utterly embarrassing moment for me and it gets worse.&lt;/p&gt;

&lt;h2&gt;Missed opportunity&lt;/h2&gt;

&lt;p&gt;The next day the conference was in full swing. I sat down to lunch with two gentlemen. After introducing myself this time, I learned one was &lt;a href=&quot;http://mornini.wordpress.com/&quot;&gt;Tom Mornini&lt;/a&gt; and the other was a speaker, &lt;a href=&quot;http://brainspl.at/&quot;&gt;Ezra Zygmuntowicz&lt;/a&gt;. Both were about to create a startup around rails deployment called &lt;a href=&quot;https://www.engineyard.com/&quot;&gt;Engine Yard&lt;/a&gt;. After some discussions over lunch about my work history, Tom handed me a business card and asked me to contact him about employment at his new startup. I wasn&amp;#39;t confident enough to respond, thinking I lacked the skills needed to work with them. Don&amp;#39;t worry, this story gets worse.&lt;/p&gt;

&lt;h2&gt;Try not to be a fanboy&lt;/h2&gt;

&lt;p&gt;On the final day of the conference, I was headed down the hallway before the concert with Why the Lucky Stiff and the Thirsty Cups. I spotted &lt;a href=&quot;http://david.heinemeierhansson.com/&quot;&gt;DHH&lt;/a&gt; heading to the lounge area. Thinking this would be a cool chance to meet the creator of Rails, I seized my opportunity and introduced myself. What proceeded afterwards was something along the lines of &amp;quot;Hey David, im such and such on IRC, I submitted a documentation patch and thanks for making Rails&amp;quot; or at least that is how I think it was said. I was so nervous and so amped up that the entire sentence came out in one long statement with no punctuation. As David nervously shook my hand. I&amp;#39;m sure his impression of me was probably &amp;quot;What a creep!&amp;quot;&lt;/p&gt;

&lt;h2&gt;Depression&lt;/h2&gt;

&lt;p&gt;At the end of the conference, I was able to network enough to get two freelance contracts. One was a project to port a PHP application to Rails and another was to move an old ASP site to Rails. What I did not know was that both projects were already spiraling out of control when I arrived. Not able to do much, they quickly turned into the two worst contracts I have ever executed in my career. Quickly leaving both of them, I fell into depression, thinking I could not hack it in Rails. My lack of interpersonal skills has finally bitten me hard and I paid the price.&lt;/p&gt;

&lt;p&gt;What was I to do? I still loved programming and had been doing it for over a decade at that point. I was hurt badly, but still in love.&lt;/p&gt;

&lt;h2&gt;New beginnings&lt;/h2&gt;

&lt;p&gt;Instead of running away from programming, I decided to face my social anxieties directly. I wanted to join a retail store to be put in front of customers and learn how to interact. This would provide valuable skills in customer service, negotiation, and empathy.&lt;/p&gt;

&lt;p&gt;It wasn&amp;#39;t long before I was hanging out at the local EBGames (now Gamestop) and was soon offered a job there. The manager initially did not want to hire me because of my obvious lack of customer service skills, but felt I could learn with training. Eventually I got the hang of things and soon ran into people who worked at the local Apple store. After applying several times, I eventually got an offer to work there about 2 years after starting with EBGames.&lt;/p&gt;

&lt;p&gt;Working at Apple was very different given the massive amount of traffic to their stores. I joined just past the initial iPhone launch and business was picking up steadily. I eventually joined the Genius team and was soon in a customer service position. Nothing teaches you empathy faster than consoling a parent who lost their child&amp;#39;s first few years of digital photos because they forgot to back them up somewhere. That job taught me a lot about working with a team, empathizing with customers, and explaining very technical subject matters to customers.&lt;/p&gt;

&lt;p&gt;Eventually I realized it was time to get back to programming. Roughly three years later, I started applying to different Rails developer positions. Given how long I had been away from programming, my chances were fairly slim to finding something. This is where I started focusing on companies offering internships or apprenticeship programs. A prominent apprenticeship I read about was with &lt;a href=&quot;http://hashrocket.com/&quot;&gt;Hashrocket&lt;/a&gt; and I applied to their Chicago office. There was one problem with that application. They did not have an apprenticeship program in Chicago. After some persistence on my part, I was eventually hired on as a developer.&lt;/p&gt;

&lt;h2&gt;Lessons learned&lt;/h2&gt;

&lt;p&gt;All those painful experiences taught me a few key things about how to break out of my shell. I hope they can help you too with advancing your career and helping your life overall.&lt;/p&gt;

&lt;h3&gt;Network&lt;/h3&gt;

&lt;p&gt;Be sure to network with others. Not just on-line, but off-line as well via meetings or local user groups. Shake hands, repeat names and make connections. You never know who you&amp;#39;ll meet as it could lead to awesome things for you in the future. Meeting the organizers of &lt;a href=&quot;http://www.chicagoruby.org/&quot;&gt;Chicago Ruby&lt;/a&gt; lead to my first presentation and my success thereon lead to speaking elsewhere. You don&amp;#39;t have to be a social butterfly to be effective at networking.&lt;/p&gt;

&lt;h3&gt;Present&lt;/h3&gt;

&lt;p&gt;There are a few reasons why I present at conferences and user groups now. Chief among them is to force myself to meet others. It&amp;#39;s possibly not for everyone, but something to have as a goal when you work on your inter-networking skills. Lots of people will help you prepare for a presentation, just have to ask. User groups are usually a great start, but go smaller and present in front of some of those people you networked with already so the pressure is not as high.&lt;/p&gt;

&lt;h3&gt;Awkward is good&lt;/h3&gt;

&lt;p&gt;I have gone to large conferences and small user groups, but you can tell I&amp;#39;m shy. Working myself up to saying &amp;#39;hello&amp;#39; instead of a head nod is difficult. Despite having done presentations in front of 300 people. Change won&amp;#39;t happen overnight, but you have to be aware you have those hangups and work past them. People around you are probably just as nervous as you and breaking the ice has a very positive effect. Stay positive and keep pushing yourself. It&amp;#39;s fine to extrovert yourself once in a while then you can go right back to being introverted. You&amp;#39;re just as beautiful either way.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope this post has helped inspire you as much as it has others when I give this as a lightning talk at conferences. My story isn&amp;#39;t very unique and I know developers who struggle with depression or social anxiety. I&amp;#39;m fortunate to have figured out a way past my quirks without medication, but recommend you seek a therapist if you still find it difficult. A lot of why I stay around the Ruby community is the large group of really helpful and smart people. Stay positive folks and remember. Don&amp;#39;t be nervous.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You have only yourself</title>
   <link href="http://martinisoftware.com//2013/03/08/you-have-only-yourself.html"/>
   <updated>2013-03-08T00:00:00-06:00</updated>
   <id>http://martinisoftware.com/2013/03/08/you-have-only-yourself</id>
   <content type="html">&lt;p&gt;Total Time: &lt;strong&gt;2 to 4 minutes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not one to write poetry, but I woke up one morning a few months back
inspired to write. At the time there was a fair amount of drama going on
twitter (when is it not?) and that likely inspired my writing. This was well
received as a lightning talk at &lt;a href=&quot;http://scna.softwarecraftsmanship.org/&quot;&gt;SCNA&lt;/a&gt; last year and I wanted to share this
with everyone.&lt;/p&gt;

&lt;p&gt;&amp;quot;This is terrible, who the hell wrote this?&amp;quot; I hear in an office.
That statement is shortly followed by fingers at a keyboard typing a command.
A brief pause as they read the output and let out a sigh.
&amp;quot;It&amp;#39;s me&amp;quot; I hear in a shameful tone that perfectly describes his or her current state.
They used that command that I love to hate.
&amp;#39;git blame&amp;#39;&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll admit it. I&amp;#39;ve been there too.
Usually you&amp;#39;re knee deep in a code base where you have a doubt.
You happen upon something so vile, so horrifying that you freak out!
In a knee-jerk reaction you might shout &amp;quot;What the fuck?&amp;quot;
And before you know it, type that command.
Then suddenly, a reason isn&amp;#39;t so in demand.
It&amp;#39;s you.&lt;/p&gt;

&lt;p&gt;Why was that code so horrible? Can that commit message tell you?
50 characters or less isn&amp;#39;t very much to discuss your life story.
Or explain why that chunk of code had to be so gory.
You see, at the time I had this deadline to meet and a client promise to keep.
That code worked! I swear it passed the test.
Maybe, I didn&amp;#39;t get my full nights rest.&lt;/p&gt;

&lt;p&gt;I emplore everyone here to take a step back.
When that chunk of code makes your brain go off-track.
Stop typing that command in vain.
Because then you have only yourself to &amp;#39;git blame&amp;#39;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Better Presentations</title>
   <link href="http://martinisoftware.com//2012/08/06/better-presentations.html"/>
   <updated>2012-08-06T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2012/08/06/better-presentations</id>
   <content type="html">&lt;p&gt;Total Time: &lt;strong&gt;Under 10 minutes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve had a few people ask me for advice on how I approach creating
presentations. This was broken out from my &amp;quot;Choose your own
adventure&amp;quot; talk that I didn&amp;#39;t get to cover, but I felt this is worth recording
and releasing to help anyone with curiosity about my approach to making
presentations.&lt;/p&gt;

&lt;p&gt;Check out the video below:&lt;/p&gt;

&lt;iframe src=&quot;http://player.vimeo.com/video/47000092&quot; width=&quot;500&quot; height=&quot;313&quot; frameborder=&quot;0&quot; webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails 3 and Cucumber</title>
   <link href="http://martinisoftware.com//2010/09/20/rails3-and-cucumber.html"/>
   <updated>2010-09-20T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2010/09/20/rails3-and-cucumber</id>
   <content type="html">&lt;p&gt;Diving into Rails 3 has been fun and frustrating these past couple of months. There have been ups and downs, frustrations and entirely new experiences learning this framework all over again. Overall, I am incredibly impressed with the changes made to the framework.  I look back at my super-old Rails 1.0 projects when the framework first hit to now and I honestly can&amp;#39;t recognize what I wrote back then. Back then Rails was an unpolished, rough framework with a noble idea of crushing the notions of XML configurations and repeating yourself.  Today it is still the opinionated framework I fell in love with, but with some flexibility in the right places.  You can still stick to their standard, but very easily apply your own thanks to cleverly implemented agnosticism of components.&lt;/p&gt;

&lt;p&gt;With this fresh look at the new Rails, I decided to take the plunge with &lt;a href=&quot;http://rspec.info/&quot;&gt;RSpec&lt;/a&gt; and &lt;a href=&quot;http://cukes.info/&quot;&gt;Cucumber&lt;/a&gt; for testing versus Test::Unit. The first thing that took me was the syntax and how easy it really was to make tests. Cucumber feels like writing an epic novel of user interaction, discovery and sometimes failed experimentation.  My only initial hurdle was the slowness of loading the test environment upon running each test, but thanks to add-ons like &lt;a href=&quot;http://github.com/timcharper/spork&quot;&gt;Spork&lt;/a&gt; I was able to speed things up a bit.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll need more time to become a serious expert, but I was shocked to see how quickly I could pick this system up. Things are organized, flexible and extensible.  Much like a framework I am used to using, except its there to help me be a better developer to myself and my clients. Of course I will have to remember to &lt;a href=&quot;http://rubyhoedown2008.confreaks.com/05-bryan-liles-lightning-talk-tatft-test-all-the-f-in-time.html&quot;&gt;Test All The Fucking Time&lt;/a&gt; when programming now. If you have a doubt, write more test coverage. Simple.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adventures in automation</title>
   <link href="http://martinisoftware.com//2010/04/12/adventures-in-automation.html"/>
   <updated>2010-04-12T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2010/04/12/adventures-in-automation</id>
   <content type="html">&lt;p&gt;Been a little while since my last post here.  A short explanation of the last 4 months in bullet point format:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Moved to Tampa&lt;/li&gt;
&lt;li&gt;Turned 25&lt;/li&gt;
&lt;li&gt;Overtime at work&lt;/li&gt;
&lt;li&gt;Studying for the CCNA and A+ exams&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Time was a precious commodity the past few months and I finally got a chance to breathe, collect myself and write a new post.  While trying to write this post, I managed to update some of the code running this blog to help automate posting and updating of my resume.  &lt;/p&gt;

&lt;p&gt;The one feature that I spent far too much time researching was converting my resume to pdf automatically when I publish a change.  I honestly don&amp;#39;t update it that much, but I thought it would be an easy task to generate it once I updated it with some new information.  So my search began for a markdown to pdf tool. Ultimately I went with wkhtmltopdf, but I&amp;#39;ll give some reasoning why I did not choose the other projects I found.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.htmldoc.org/&quot;&gt;HTMLDoc&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Ultimately did not respect any CSS, so my pdf was this lifeless, unformatted page that looked like something out of the mid 90s.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.princexml.com/&quot;&gt;Prince&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Very nice tool, the free one watermarks your pdf files and the &amp;quot;professional&amp;quot; license is nearly $500.  Would be nice to use for a commercial CMS where dynamic PDF download is needed.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;https://xhtmlrenderer.dev.java.net/&quot;&gt;Flying Saucer&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Written in Java, so it was a bit complicated to setup, but could be called via JRuby.  Did not feel like respecting the print stylesheet either.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://code.google.com/p/wkhtmltopdf/&quot;&gt;wkhtmltopdf&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Someone came up with the brilliant idea of making a command line wrapper around Qt&amp;#39;s implementation of WebKit (the Safari browsing engine) purely for making PDFs out of HTML pages.  It worked flawlessly, except on my Snow Leopard mac when I feed it the option to load the print style.  I was forced to run this on an Ubuntu system I manage at home.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I may make a second part to this post about the automation I&amp;#39;ve done on this blog, but for now you can take a peek at the commented code in the &lt;a href=&quot;http://github.com/martinisoft/martinisoft.github.com/blob/master/Rakefile&quot;&gt;Rakefile&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dusting off the cobwebs</title>
   <link href="http://martinisoftware.com//2009/11/22/dusting-off-the-cobwebs.html"/>
   <updated>2009-11-22T00:00:00-06:00</updated>
   <id>http://martinisoftware.com/2009/11/22/dusting-off-the-cobwebs</id>
   <content type="html">&lt;p&gt;Took many months, but I finally found some time to clean up and update my site design.  I owe a lot of the inspiration and code to Dan Cederholm&amp;#39;s new book &lt;a href=&quot;http://handcraftedcss.com/&quot;&gt;Handcrafted CSS&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;My strong suit is not web design and I have always struggled with keeping up on the latest innovations in that area.  Lately, I have made a conscious effort to follow leading designers and their published material.  The books that stuck and got me thinking differently were the books authored by &lt;a href=&quot;http://simplebits.com/&quot;&gt;Dan Cederholm&lt;/a&gt;.  His style and explanations are simple to follow while comparing methods to a solution.  This works wonderfully for a logical guy like myself where I want to know what method works for certain situations.&lt;/p&gt;

&lt;p&gt;The result is the updated design you see here.  I&amp;#39;ve littered my site with credits to &lt;a href=&quot;http://simplebits.com/&quot;&gt;Dan&lt;/a&gt; and &lt;a href=&quot;http://meyerweb.com/&quot;&gt;Eric Meyer&lt;/a&gt; to give props to these design gurus.  If you&amp;#39;re wondering where I got the palette and design ideas, it was inspired by Dan Webb&amp;#39;s new outfit &lt;a href=&quot;http://massiverobot.co.uk/&quot;&gt;Massive Robot&lt;/a&gt;.  You could call me an imitator, but I&amp;#39;m happy to give credit where it is due.&lt;/p&gt;

&lt;p&gt;Still more work to do, but this was a major milestone for me and giving me things to think about for next year.  I am moving to Tampa next month so the next entry may come after the new year when I am settled into my new apartment.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Nokogiri on Leopard</title>
   <link href="http://martinisoftware.com//2009/07/31/nokogiri-on-leopard.html"/>
   <updated>2009-07-31T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2009/07/31/nokogiri-on-leopard</id>
   <content type="html">&lt;p&gt;My first experience with &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;Regular Expressions&lt;/a&gt; was writing whats called a &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_scraping&quot;&gt;web scraper&lt;/a&gt; to fetch weather data from Weather.com.  Back then, this would involve a ton of IF statements and a large array of data.  Very tedious and time consuming, but it was very educational.  Today, Ruby has a couple convenient libraries built for this sort of task.  Even a way to mimic a browser so you can get to pages normally reserved for site members.&lt;/p&gt;

&lt;p&gt;After some careful research I settled on &lt;a href=&quot;http://nokogiri.rubyforge.org/&quot;&gt;Nokogiri&lt;/a&gt; because its the library of choice with &lt;a href=&quot;http://mechanize.rubyforge.org/&quot;&gt;Mechanize&lt;/a&gt;, which I use to grab data from web sites and scrape the data from them easily.  Before you can really use this library on OSX Leopard, you have to jump through a few hoops.&lt;/p&gt;

&lt;p&gt;Mechanize may give you an error message like so:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WARNING: Nokogiri was built against LibXML version 2.7.3, but has dynamically loaded 2.6.16
HI.  You&amp;#39;re using libxml2 version 2.6.16 which is over 4 years old and has
plenty of bugs.  We suggest that for maximum HTML/XML parsing pleasure, you
upgrade your version of libxml2 and re-install nokogiri.  If you like using
libxml2 version 2.6.16, but don&amp;#39;t like this warning, please define the constant
I&lt;em&gt;KNOW&lt;/em&gt;I&lt;em&gt;AM&lt;/em&gt;USING&lt;em&gt;AN&lt;/em&gt;OLD&lt;em&gt;AND&lt;/em&gt;BUGGY&lt;em&gt;VERSION&lt;/em&gt;OF_LIBXML2 before requring nokogiri.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is easy to fix, so here&amp;#39;s how to get rolling in Leopard:&lt;/p&gt;

&lt;h3&gt;Install the latest libxml2 and libxslt&lt;/h3&gt;

&lt;p&gt;Make a source directory somewhere and do the following commands to grab the latest versions of libxml2 and libxslt:&lt;/p&gt;

&lt;pre&gt;
    $ curl -O ftp://xmlsoft.org/libxml2/libxml2-2.7.3.tar.gz
    $ curl -O ftp://xmlsoft.org/libxml2/libxslt-1.1.24.tar.gz
&lt;/pre&gt;

&lt;p&gt;Once done, unpack both like so:&lt;/p&gt;

&lt;pre&gt;
    $ tar xzf libxml2-2.7.3.tar.gz
    $ tar xzf libxslt-1.1.24.tar.gz
&lt;/pre&gt;

&lt;p&gt;Now change into the libxml directory and build it:&lt;/p&gt;

&lt;pre&gt;
    $ ./configure
    $ make
    $ sudo make install
&lt;/pre&gt;

&lt;p&gt;Now jump back to the libxslt directory and do the same:&lt;/p&gt;

&lt;pre&gt;
    $ cd ../libxslt-1.1.24
    $ ./configure
    $ make
    $ sudo make install
&lt;/pre&gt;

&lt;p&gt;If you want, go ahead and delete the sources to save space. Now you&amp;#39;re ready for the final step.&lt;/p&gt;

&lt;h3&gt;Install Nokogiri&lt;/h3&gt;

&lt;p&gt;Now installing Nokogiri is super easy once we tell it where to link.&lt;/p&gt;

&lt;pre&gt;
    $ sudo gem install nokogiri -- --with-xml2-include=/usr/local/include/libxml2 --with-xml2-lib=/usr/local/lib
&lt;/pre&gt;

&lt;p&gt;Once you run that you are good to go.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Haml and Sass with Rails</title>
   <link href="http://martinisoftware.com//2009/07/19/haml-and-sass.html"/>
   <updated>2009-07-19T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2009/07/19/haml-and-sass</id>
   <content type="html">&lt;p&gt;Getting back into the latest Rails and installing the latest version of the greatest HTML markup system ever was a little tougher than expected.  Turns out the new hotness with Rails since 2.1 is to config.gem everything, which makes sense.  This doesn&amp;#39;t work well for things like HAML, which expect to be plugins.  Luckily you can conform to the new trend without littering your vendor/plugins folder.&lt;/p&gt;

&lt;h3&gt;Installing HAML and Sass&lt;/h3&gt;

&lt;p&gt;You must first do a basic gem install of haml thusly:&lt;/p&gt;

&lt;pre&gt;
    $ sudo gem install haml
&lt;/pre&gt;

&lt;p&gt;Once completed you&amp;#39;ll need to add the following to your environment.rb&lt;/p&gt;

&lt;pre&gt;
    config.gem &quot;haml&quot;
&lt;/pre&gt;

&lt;p&gt;Next comes the cool trick...&lt;/p&gt;

&lt;h3&gt;The Trick&lt;/h3&gt;

&lt;p&gt;As of Rails 2.0, the default load order for configuration is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;config/preinitializer.rb (if the file exists)&lt;/li&gt;
&lt;li&gt;config/environment.rb&lt;/li&gt;
&lt;li&gt;config/environments/* (defaults to your current environment)&lt;/li&gt;
&lt;li&gt;config/initializers/*.rb&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You have to place the following in a new file inside the config/initializers/ folder (I called mine haml&lt;em&gt;and&lt;/em&gt;sass.rb) in order to get HAML to properly load, which allows you to configure its options as well.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;c1&quot;&gt;# Init HAML&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Haml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once you add that, SASS will work beautifully and allow you to configure it normally.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adventures in Makefiles</title>
   <link href="http://martinisoftware.com//2009/06/18/adventures-in-makefiles.html"/>
   <updated>2009-06-18T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2009/06/18/adventures-in-makefiles</id>
   <content type="html">&lt;p&gt;Writing Makefiles is painful.  Especially in multiple platforms.  Check out the source code to any C or C++ based application to see what I mean.  You&amp;#39;ll quickly lose your sanity wrapping your brain around the syntax, scope and depth of these files.  Thankfully there are tools out there to make this job much easier, but which one?  I chose Premake.&lt;/p&gt;

&lt;h3&gt;Looking Around&lt;/h3&gt;

&lt;p&gt;Initially I gave CMake and Scons a good run for the money.  You&amp;#39;ll see my struggle with this issue in Listbotto.  Going back and forth, editing and referencing documentation.  After nearly two full days I finally got a working compile, but at what cost?  Nearly two full days I could have been writing code!  My search for a proper tool finally landed me at the doorstep of &lt;a href=&quot;http://industriousone.com/premake&quot;&gt;Premake&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Premake is written in C and LUA by &lt;a href=&quot;http://sourceforge.net/project/memberlist.php?group_id=71616&quot;&gt;3 people&lt;/a&gt;. LUA is an embeddable scripting language that has been around for years.  It&amp;#39;s also been used in projects like &lt;a href=&quot;http://www.garrysmod.com/&quot;&gt;Garry&amp;#39;s Mod&lt;/a&gt; and &lt;a href=&quot;http://www.farcrygame.com/&quot;&gt;FarCry&lt;/a&gt;.  There is beauty in both its simplicity and power as a language because you can extend the features.  You&amp;#39;ll also find lots of support, books, documentation, and help from various communities that use the language, which is a plus.&lt;/p&gt;

&lt;h3&gt;Switching To Premake&lt;/h3&gt;

&lt;p&gt;After making the decision on Premake, switching was amazingly easy.  This was partly because the site has some recipes to get you started.  After adding all the directories I finally got a compile to happen in 10 minutes.  I think the neighbors might have heard my cries of joy.&lt;/p&gt;

&lt;p&gt;Soon after the switch I had other libraries added in, compiling, working.  I was personally relieved to not only put the whole build tools issue behind me, but to finally look at my code again.  I honestly compare this to how Ruby on Rails takes a lot of the pain away with web application development.  Much of the heavy lifting is done, just write code! &lt;/p&gt;

&lt;p&gt;It wasn&amp;#39;t all sparkles and fun though because there are some drawbacks to me choosing this system, but I can live with them for the time being.&lt;/p&gt;

&lt;h3&gt;It Wasn&amp;#39;t All Perfect&lt;/h3&gt;

&lt;p&gt;Premake (as of 4.0) does not have a way to generate projects for XCode, though it is planned for 4.1 and 4.2.  If you compare it to tools like CMake, you honestly won&amp;#39;t get the control you&amp;#39;re seeking, but you can add it if needed.  I also found a gotcha with the syntax, but it was quickly figured out and I&amp;#39;ll be submitting some patches soon.&lt;/p&gt;

&lt;h3&gt;Final Thoughts&lt;/h3&gt;

&lt;p&gt;This post is not meant to start a flame war about which build tool is better.  I firmly believe each serves a great purpose based on what you need.  It took many years for the KDevelop project to switch from Make to CMake.  They even tried SCons, but found CMake to be what the doctor ordered.  Some people I know swear by SCons, while others say CMake is amazing. It&amp;#39;s all very simple, pick the tool for the job you need and one you&amp;#39;ll love to use.  &lt;/p&gt;

&lt;p&gt;Premake was a joy to work with in comparison to the others I tried, which is why it stuck.  Your mileage may vary of course.  Now I need to get back to coding.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Welcome to 'Martini Software'</title>
   <link href="http://martinisoftware.com//2009/05/23/first-post.html"/>
   <updated>2009-05-23T00:00:00-05:00</updated>
   <id>http://martinisoftware.com/2009/05/23/first-post</id>
   <content type="html">&lt;p&gt;Whew! After many years of on and off editing, I finally built a site that I love to call home.  Big thanks to the folks at Github for adding this feature to their service.  Seems that every time I look at the site, there is a new feature.&lt;/p&gt;

&lt;p&gt;Now my plans are to post at least once per month with topics about programming and other geeky stuff.  I&amp;#39;ll be making my first real post in the next couple of weeks.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
